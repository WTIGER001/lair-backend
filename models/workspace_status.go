// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// WorkspaceStatus Workspace Status
//
// swagger:model WorkspaceStatus
type WorkspaceStatus struct {

	// Workspace ID / session id
	ID string `json:"id,omitempty"`

	// Amount of CPU being requested to run this algorithm
	// Enum: [none scheduling starting running stopping]
	Status string `json:"status,omitempty"`

	// URL to the running instance
	URL float64 `json:"url,omitempty"`
}

// Validate validates this workspace status
func (m *WorkspaceStatus) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var workspaceStatusTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["none","scheduling","starting","running","stopping"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		workspaceStatusTypeStatusPropEnum = append(workspaceStatusTypeStatusPropEnum, v)
	}
}

const (

	// WorkspaceStatusStatusNone captures enum value "none"
	WorkspaceStatusStatusNone string = "none"

	// WorkspaceStatusStatusScheduling captures enum value "scheduling"
	WorkspaceStatusStatusScheduling string = "scheduling"

	// WorkspaceStatusStatusStarting captures enum value "starting"
	WorkspaceStatusStatusStarting string = "starting"

	// WorkspaceStatusStatusRunning captures enum value "running"
	WorkspaceStatusStatusRunning string = "running"

	// WorkspaceStatusStatusStopping captures enum value "stopping"
	WorkspaceStatusStatusStopping string = "stopping"
)

// prop value enum
func (m *WorkspaceStatus) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, workspaceStatusTypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *WorkspaceStatus) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *WorkspaceStatus) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WorkspaceStatus) UnmarshalBinary(b []byte) error {
	var res WorkspaceStatus
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
