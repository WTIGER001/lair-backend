// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/wtiger001/lair-backend/models"
)

// GetWorkspacesOKCode is the HTTP code returned for type GetWorkspacesOK
const GetWorkspacesOKCode int = 200

/*GetWorkspacesOK OK

swagger:response getWorkspacesOK
*/
type GetWorkspacesOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Workspace `json:"body,omitempty"`
}

// NewGetWorkspacesOK creates GetWorkspacesOK with default headers values
func NewGetWorkspacesOK() *GetWorkspacesOK {

	return &GetWorkspacesOK{}
}

// WithPayload adds the payload to the get workspaces o k response
func (o *GetWorkspacesOK) WithPayload(payload []*models.Workspace) *GetWorkspacesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get workspaces o k response
func (o *GetWorkspacesOK) SetPayload(payload []*models.Workspace) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkspacesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Workspace, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetWorkspacesInternalServerErrorCode is the HTTP code returned for type GetWorkspacesInternalServerError
const GetWorkspacesInternalServerErrorCode int = 500

/*GetWorkspacesInternalServerError Internal Server Error

swagger:response getWorkspacesInternalServerError
*/
type GetWorkspacesInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetWorkspacesInternalServerError creates GetWorkspacesInternalServerError with default headers values
func NewGetWorkspacesInternalServerError() *GetWorkspacesInternalServerError {

	return &GetWorkspacesInternalServerError{}
}

// WithPayload adds the payload to the get workspaces internal server error response
func (o *GetWorkspacesInternalServerError) WithPayload(payload string) *GetWorkspacesInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get workspaces internal server error response
func (o *GetWorkspacesInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkspacesInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
